{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"disabled\", \"editable\", \"label\", \"error\", \"selectionColor\", \"cursorColor\", \"underlineColor\", \"underlineStyle\", \"activeUnderlineColor\", \"textColor\", \"dense\", \"style\", \"theme\", \"render\", \"multiline\", \"parentState\", \"innerRef\", \"onFocus\", \"forceFocus\", \"onBlur\", \"onChangeText\", \"onLayoutAnimatedText\", \"onLeftAffixLayoutChange\", \"onRightAffixLayoutChange\", \"left\", \"right\", \"placeholderTextColor\", \"testID\", \"contentStyle\"],\n  _excluded2 = [\"fontSize\", \"lineHeight\", \"fontWeight\", \"height\", \"paddingHorizontal\", \"textAlign\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport NativeTextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Underline } from './Addons/Underline';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\nimport TextInputAdornment from './Adornment/TextInputAdornment';\nimport { getAdornmentConfig, getAdornmentStyleAdjustmentForNativeInput } from './Adornment/TextInputAdornment';\nimport { ADORNMENT_SIZE, LABEL_PADDING_TOP_DENSE, LABEL_WIGGLE_X_OFFSET, MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_Y_OFFSET, MIN_DENSE_HEIGHT, MIN_DENSE_HEIGHT_WL } from './constants';\nimport { adjustPaddingFlat, calculateFlatAffixTopPosition, calculateFlatInputHorizontalPadding, calculateInputHeight, calculateLabelTopPosition, calculatePadding, getConstants, getFlatInputColors } from './helpers';\nimport InputLabel from './Label/InputLabel';\nconst TextInputFlat = _ref => {\n  let {\n      disabled = false,\n      editable = true,\n      label,\n      error = false,\n      selectionColor: customSelectionColor,\n      cursorColor,\n      underlineColor,\n      underlineStyle,\n      activeUnderlineColor,\n      textColor,\n      dense,\n      style,\n      theme,\n      render = props => React.createElement(NativeTextInput, props),\n      multiline = false,\n      parentState,\n      innerRef,\n      onFocus,\n      forceFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      onLeftAffixLayoutChange,\n      onRightAffixLayoutChange,\n      left,\n      right,\n      placeholderTextColor,\n      testID = 'text-input-flat',\n      contentStyle\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const isAndroid = Platform.OS === 'android';\n  const {\n    colors,\n    isV3,\n    roundness\n  } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n  const {\n    LABEL_PADDING_TOP,\n    FLAT_INPUT_OFFSET,\n    MIN_HEIGHT\n  } = getConstants(isV3);\n  const _ref2 = StyleSheet.flatten(style) || {},\n    {\n      fontSize: fontSizeStyle,\n      lineHeight,\n      fontWeight,\n      height,\n      paddingHorizontal,\n      textAlign\n    } = _ref2,\n    viewStyle = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  const isPaddingHorizontalPassed = paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n  const adornmentConfig = getAdornmentConfig({\n    left,\n    right\n  });\n  let {\n    paddingLeft,\n    paddingRight\n  } = calculateFlatInputHorizontalPadding({\n    adornmentConfig,\n    isV3\n  });\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal;\n    paddingRight = paddingHorizontal;\n  }\n  const {\n    leftLayout,\n    rightLayout\n  } = parentState;\n  const rightAffixWidth = right ? rightLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  const leftAffixWidth = left ? leftLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  const adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput({\n    adornmentConfig,\n    rightAffixWidth,\n    leftAffixWidth,\n    paddingHorizontal,\n    inputOffset: FLAT_INPUT_OFFSET,\n    mode: InputMode.Flat,\n    isV3\n  });\n  const {\n    inputTextColor,\n    activeColor,\n    underlineColorCustom,\n    placeholderColor,\n    errorColor,\n    backgroundColor,\n    selectionColor\n  } = getFlatInputColors({\n    underlineColor,\n    activeUnderlineColor,\n    customSelectionColor,\n    textColor,\n    disabled,\n    error,\n    theme\n  });\n  const containerStyle = {\n    backgroundColor,\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness\n  };\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n  const baseLabelTranslateX = (I18nManager.getConstants().isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2) + (1 - labelScale) * (I18nManager.getConstants().isRTL ? -1 : 1) * paddingLeft;\n  const minInputHeight = dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE : MIN_HEIGHT - LABEL_PADDING_TOP;\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n  const topPosition = calculateLabelTopPosition(labelHeight, inputHeight, multiline && height ? 0 : !height ? minInputHeight / 2 : 0);\n  if (height && typeof height !== 'number') {\n    console.warn('Currently we support only numbers in height prop');\n  }\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid,\n    styles: StyleSheet.flatten(dense ? styles.inputFlatDense : styles.inputFlat)\n  };\n  const pad = calculatePadding(paddingSettings);\n  const paddingFlat = adjustPaddingFlat(Object.assign({}, paddingSettings, {\n    pad\n  }));\n  const baseLabelTranslateY = -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n  const placeholderOpacity = hasActiveOutline ? parentState.labeled : parentState.labelLayout.measured ? 1 : 0;\n  const minHeight = height || (dense ? label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT : MIN_HEIGHT);\n  const flatHeight = inputHeight + (!height ? dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP : 0);\n  const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n  const leftAffixTopPosition = leftLayout.height ? calculateFlatAffixTopPosition(Object.assign({\n    height: flatHeight\n  }, paddingFlat, {\n    affixHeight: leftLayout.height\n  })) : null;\n  const rightAffixTopPosition = rightLayout.height ? calculateFlatAffixTopPosition(Object.assign({\n    height: flatHeight\n  }, paddingFlat, {\n    affixHeight: rightLayout.height\n  })) : null;\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    labelError: error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    paddingLeft: isAndroid ? I18nManager.isRTL ? paddingRight : paddingLeft : paddingLeft,\n    paddingRight: isAndroid ? I18nManager.isRTL ? paddingLeft : paddingRight : paddingRight,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    errorColor,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n    contentStyle,\n    opacity: parentState.value || parentState.focused ? parentState.labelLayout.measured ? 1 : 0 : 1\n  };\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange\n  };\n  let adornmentProps = {\n    paddingHorizontal,\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Affix]: affixTopPosition,\n      [AdornmentType.Icon]: iconTopPosition\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    disabled\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = Object.assign({}, adornmentProps, {\n      left,\n      right,\n      textStyle: Object.assign({}, font, {\n        fontSize,\n        lineHeight,\n        fontWeight\n      }),\n      visible: parentState.labeled\n    });\n  }\n  return React.createElement(View, {\n    style: [containerStyle, viewStyle]\n  }, React.createElement(Underline, {\n    style: underlineStyle,\n    hasActiveOutline: hasActiveOutline,\n    parentState: parentState,\n    underlineColorCustom: underlineColorCustom,\n    error: error,\n    colors: colors,\n    activeColor: activeColor,\n    theme: theme\n  }), React.createElement(View, {\n    style: [styles.labelContainer, {\n      minHeight\n    }]\n  }, !isAndroid && multiline && !!label && !disabled && React.createElement(View, {\n    testID: \"patch-container\",\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, dense ? styles.densePatchContainer : styles.patchContainer, {\n      backgroundColor: viewStyle.backgroundColor || containerStyle.backgroundColor,\n      left: paddingLeft,\n      right: paddingRight\n    }]\n  }), label ? React.createElement(InputLabel, _extends({\n    labeled: parentState.labeled,\n    error: parentState.error,\n    focused: parentState.focused,\n    wiggle: Boolean(parentState.value && labelProps.labelError),\n    labelLayoutMeasured: parentState.labelLayout.measured,\n    labelLayoutWidth: parentState.labelLayout.width\n  }, labelProps)) : null, render === null || render === void 0 ? void 0 : render(Object.assign({}, rest, {\n    ref: innerRef,\n    onChangeText,\n    placeholder: label ? parentState.placeholder : rest.placeholder,\n    editable: !disabled && editable,\n    selectionColor,\n    cursorColor: typeof cursorColor === 'undefined' ? activeColor : cursorColor,\n    placeholderTextColor: placeholderTextColor ?? placeholderColor,\n    onFocus,\n    onBlur,\n    underlineColorAndroid: 'transparent',\n    multiline,\n    style: [styles.input, !multiline || multiline && height ? {\n      height: flatHeight\n    } : {}, paddingFlat, Object.assign({\n      paddingLeft,\n      paddingRight\n    }, font, {\n      fontSize,\n      lineHeight,\n      fontWeight,\n      color: inputTextColor,\n      textAlignVertical: multiline ? 'top' : 'center',\n      textAlign: textAlign ? textAlign : I18nManager.getConstants().isRTL ? 'right' : 'left'\n    }), Platform.OS === 'web' && {\n      outline: 'none'\n    }, adornmentStyleAdjustmentForNativeInput, contentStyle],\n    testID\n  }))), React.createElement(TextInputAdornment, adornmentProps));\n};\nexport default TextInputFlat;\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  input: {\n    margin: 0\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2\n  }\n});","map":{"version":3,"names":["React","I18nManager","Platform","StyleSheet","NativeTextInput","View","Underline","AdornmentSide","AdornmentType","InputMode","TextInputAdornment","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","ADORNMENT_SIZE","LABEL_PADDING_TOP_DENSE","LABEL_WIGGLE_X_OFFSET","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_Y_OFFSET","MIN_DENSE_HEIGHT","MIN_DENSE_HEIGHT_WL","adjustPaddingFlat","calculateFlatAffixTopPosition","calculateFlatInputHorizontalPadding","calculateInputHeight","calculateLabelTopPosition","calculatePadding","getConstants","getFlatInputColors","InputLabel","TextInputFlat","_ref","disabled","editable","label","error","selectionColor","customSelectionColor","cursorColor","underlineColor","underlineStyle","activeUnderlineColor","textColor","dense","style","theme","render","props","createElement","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","testID","contentStyle","rest","_objectWithoutPropertiesLoose","_excluded","isAndroid","OS","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","LABEL_PADDING_TOP","FLAT_INPUT_OFFSET","MIN_HEIGHT","_ref2","flatten","fontSize","fontSizeStyle","lineHeight","fontWeight","height","paddingHorizontal","textAlign","viewStyle","_excluded2","isPaddingHorizontalPassed","undefined","adornmentConfig","paddingLeft","paddingRight","leftLayout","rightLayout","rightAffixWidth","width","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","inputOffset","mode","Flat","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","backgroundColor","containerStyle","borderTopLeftRadius","borderTopRightRadius","labelScale","fontScale","labelWidth","labelLayout","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","isRTL","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","styles","inputFlatDense","inputFlat","pad","paddingFlat","Object","assign","baseLabelTranslateY","placeholderOpacity","labeled","measured","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","labelError","placeholderStyle","placeholder","wiggleOffsetX","maxFontSizeMultiplier","opacity","value","affixTopPosition","Left","Right","onAffixChange","adornmentProps","Affix","Icon","isTextInputFocused","length","textStyle","visible","labelContainer","pointerEvents","absoluteFill","densePatchContainer","patchContainer","_extends","wiggle","Boolean","labelLayoutMeasured","labelLayoutWidth","ref","underlineColorAndroid","input","color","textAlignVertical","outline","create","position","paddingTop","paddingBottom","margin","zIndex"],"sources":["C:\\Users\\user\\Desktop\\projet perso\\La Fons'Dal\\LFD\\LFD\\node_modules\\react-native-paper\\src\\components\\TextInput\\TextInputFlat.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleSheet,\n  TextInput as NativeTextInput,\n  TextStyle,\n  View,\n} from 'react-native';\n\nimport { Underline } from './Addons/Underline';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport {\n  ADORNMENT_SIZE,\n  LABEL_PADDING_TOP_DENSE,\n  LABEL_WIGGLE_X_OFFSET,\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_Y_OFFSET,\n  MIN_DENSE_HEIGHT,\n  MIN_DENSE_HEIGHT_WL,\n} from './constants';\nimport {\n  adjustPaddingFlat,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n  calculateInputHeight,\n  calculateLabelTopPosition,\n  calculatePadding,\n  getConstants,\n  getFlatInputColors,\n  Padding,\n} from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport type { ChildTextInputProps, RenderProps } from './types';\n\nconst TextInputFlat = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor: customSelectionColor,\n  cursorColor,\n  underlineColor,\n  underlineStyle,\n  activeUnderlineColor,\n  textColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input-flat',\n  contentStyle,\n  ...rest\n}: ChildTextInputProps) => {\n  const isAndroid = Platform.OS === 'android';\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { LABEL_PADDING_TOP, FLAT_INPUT_OFFSET, MIN_HEIGHT } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    lineHeight,\n    fontWeight,\n    height,\n    paddingHorizontal,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  const isPaddingHorizontalPassed =\n    paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n  const adornmentConfig = getAdornmentConfig({\n    left,\n    right,\n  });\n\n  let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n    adornmentConfig,\n    isV3,\n  });\n\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal as number;\n    paddingRight = paddingHorizontal as number;\n  }\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      paddingHorizontal,\n      inputOffset: FLAT_INPUT_OFFSET,\n      mode: InputMode.Flat,\n      isV3,\n    });\n\n  const {\n    inputTextColor,\n    activeColor,\n    underlineColorCustom,\n    placeholderColor,\n    errorColor,\n    backgroundColor,\n    selectionColor,\n  } = getFlatInputColors({\n    underlineColor,\n    activeUnderlineColor,\n    customSelectionColor,\n    textColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const containerStyle = {\n    backgroundColor,\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness,\n  };\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n      (labelHalfWidth - (labelScale * labelWidth) / 2) +\n    (1 - labelScale) *\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      paddingLeft;\n\n  const minInputHeight = dense\n    ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE\n    : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid,\n    styles: StyleSheet.flatten(\n      dense ? styles.inputFlatDense : styles.inputFlat\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingFlat = adjustPaddingFlat({\n    ...paddingSettings,\n    pad,\n  });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? parentState.labeled\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const minHeight =\n    height ||\n    (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n  const flatHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n  const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n  const leftAffixTopPosition = leftLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: leftLayout.height,\n      })\n    : null;\n\n  const rightAffixTopPosition = rightLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: rightLayout.height,\n      })\n    : null;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    labelError: error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    paddingLeft: isAndroid\n      ? I18nManager.isRTL\n        ? paddingRight\n        : paddingLeft\n      : paddingLeft,\n    paddingRight: isAndroid\n      ? I18nManager.isRTL\n        ? paddingLeft\n        : paddingRight\n      : paddingRight,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    errorColor,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n    contentStyle,\n    opacity:\n      parentState.value || parentState.focused\n        ? parentState.labelLayout.measured\n          ? 1\n          : 0\n        : 1,\n  };\n\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    paddingHorizontal,\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Affix]: affixTopPosition,\n      [AdornmentType.Icon]: iconTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    disabled,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={[containerStyle, viewStyle]}>\n      <Underline\n        style={underlineStyle}\n        hasActiveOutline={hasActiveOutline}\n        parentState={parentState}\n        underlineColorCustom={underlineColorCustom}\n        error={error}\n        colors={colors}\n        activeColor={activeColor}\n        theme={theme}\n      />\n      <View\n        style={[\n          styles.labelContainer,\n          {\n            minHeight,\n          },\n        ]}\n      >\n        {!isAndroid && multiline && !!label && !disabled && (\n          // Workaround for: https://github.com/callstack/react-native-paper/issues/2799\n          // Patch for a multiline TextInput with fixed height, which allow to avoid covering input label with its value.\n          <View\n            testID=\"patch-container\"\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              dense ? styles.densePatchContainer : styles.patchContainer,\n              {\n                backgroundColor:\n                  viewStyle.backgroundColor || containerStyle.backgroundColor,\n                left: paddingLeft,\n                right: paddingRight,\n              },\n            ]}\n          />\n        )}\n        {label ? (\n          <InputLabel\n            labeled={parentState.labeled}\n            error={parentState.error}\n            focused={parentState.focused}\n            wiggle={Boolean(parentState.value && labelProps.labelError)}\n            labelLayoutMeasured={parentState.labelLayout.measured}\n            labelLayoutWidth={parentState.labelLayout.width}\n            {...labelProps}\n          />\n        ) : null}\n        {render?.({\n          ...rest,\n          ref: innerRef,\n          onChangeText,\n          placeholder: label ? parentState.placeholder : rest.placeholder,\n          editable: !disabled && editable,\n          selectionColor,\n          cursorColor:\n            typeof cursorColor === 'undefined' ? activeColor : cursorColor,\n          placeholderTextColor: placeholderTextColor ?? placeholderColor,\n          onFocus,\n          onBlur,\n          underlineColorAndroid: 'transparent',\n          multiline,\n          style: [\n            styles.input,\n            !multiline || (multiline && height) ? { height: flatHeight } : {},\n            paddingFlat,\n            {\n              paddingLeft,\n              paddingRight,\n              ...font,\n              fontSize,\n              lineHeight,\n              fontWeight,\n              color: inputTextColor,\n              textAlignVertical: multiline ? 'top' : 'center',\n              textAlign: textAlign\n                ? textAlign\n                : I18nManager.getConstants().isRTL\n                ? 'right'\n                : 'left',\n            },\n            Platform.OS === 'web' && { outline: 'none' },\n            adornmentStyleAdjustmentForNativeInput,\n            contentStyle,\n          ],\n          testID,\n        })}\n      </View>\n      <TextInputAdornment {...adornmentProps} />\n    </View>\n  );\n};\n\nexport default TextInputFlat;\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  input: {\n    margin: 0,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2,\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2,\n  },\n});\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,WAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,IAAA;AAU9B,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,aAAa,EAAEC,aAAa,EAAEC,SAAS,QAAQ,mBAAmB;AAC3E,OAAOC,kBAAkB,MAElB,gCAAgC;AACvC,SACEC,kBAAkB,EAClBC,yCAAyC,QACpC,gCAAgC;AACvC,SACEC,cAAc,EACdC,uBAAuB,EACvBC,qBAAqB,EACrBC,yBAAyB,EACzBC,yBAAyB,EACzBC,wBAAwB,EACxBC,gBAAgB,EAChBC,mBAAmB,QACd,aAAa;AACpB,SACEC,iBAAiB,EACjBC,6BAA6B,EAC7BC,mCAAmC,EACnCC,oBAAoB,EACpBC,yBAAyB,EACzBC,gBAAgB,EAChBC,YAAY,EACZC,kBAAkB,QAEb,WAAW;AAClB,OAAOC,UAAU,MAAM,oBAAoB;AAG3C,MAAMC,aAAa,GAAGC,IAAA,IA+BK;EAAA,IA/BJ;MACrBC,QAAQ,GAAG,KAAK;MAChBC,QAAQ,GAAG,IAAI;MACfC,KAAK;MACLC,KAAK,GAAG,KAAK;MACbC,cAAc,EAAEC,oBAAoB;MACpCC,WAAW;MACXC,cAAc;MACdC,cAAc;MACdC,oBAAoB;MACpBC,SAAS;MACTC,KAAK;MACLC,KAAK;MACLC,KAAK;MACLC,MAAM,GAAIC,KAAkB,IAAK/C,KAAA,CAAAgD,aAAA,CAAC5C,eAAe,EAAK2C,KAAQ,CAAC;MAC/DE,SAAS,GAAG,KAAK;MACjBC,WAAW;MACXC,QAAQ;MACRC,OAAO;MACPC,UAAU;MACVC,MAAM;MACNC,YAAY;MACZC,oBAAoB;MACpBC,uBAAuB;MACvBC,wBAAwB;MACxBC,IAAI;MACJC,KAAK;MACLC,oBAAoB;MACpBC,MAAM,GAAG,iBAAiB;MAC1BC;IAEmB,CAAC,GAAAhC,IAAA;IADjBiC,IAAA,GAAAC,6BAAA,CACiBlC,IAAA,EAAAmC,SAAA;EACpB,MAAMC,SAAS,GAAGjE,QAAQ,CAACkE,EAAE,KAAK,SAAS;EAC3C,MAAM;IAAEC,MAAM;IAAEC,IAAI;IAAEC;EAAU,CAAC,GAAG1B,KAAK;EACzC,MAAM2B,IAAI,GAAGF,IAAI,GAAGzB,KAAK,CAAC4B,KAAK,CAACC,SAAS,GAAG7B,KAAK,CAAC4B,KAAK,CAACE,OAAO;EAC/D,MAAMC,gBAAgB,GAAG1B,WAAW,CAAC2B,OAAO,IAAI1C,KAAK;EAErD,MAAM;IAAE2C,iBAAiB;IAAEC,iBAAiB;IAAEC;EAAW,CAAC,GACxDrD,YAAY,CAAC2C,IAAI,CAAC;EAEpB,MAAAW,KAAA,GAQK9E,UAAU,CAAC+E,OAAO,CAACtC,KAAK,CAAC,IAAI,CAAC,CAAe;IAR5C;MACJuC,QAAQ,EAAEC,aAAa;MACvBC,UAAU;MACVC,UAAU;MACVC,MAAM;MACNC,iBAAiB;MACjBC;IAEF,CAAC,GAAAR,KAAA;IADIS,SAAA,GAAAzB,6BAAA,CAAAgB,KAAA,EAAAU,UAAA;EAEL,MAAMR,QAAQ,GAAGC,aAAa,IAAIpE,yBAAyB;EAE3D,MAAM4E,yBAAyB,GAC7BJ,iBAAiB,KAAKK,SAAS,IAAI,OAAOL,iBAAiB,KAAK,QAAQ;EAE1E,MAAMM,eAAe,GAAGnF,kBAAkB,CAAC;IACzCgD,IAAI;IACJC;EACF,CAAC,CAAC;EAEF,IAAI;IAAEmC,WAAW;IAAEC;EAAa,CAAC,GAAGzE,mCAAmC,CAAC;IACtEuE,eAAe;IACfxB;EACF,CAAC,CAAC;EAEF,IAAIsB,yBAAyB,EAAE;IAC7BG,WAAW,GAAGP,iBAA2B;IACzCQ,YAAY,GAAGR,iBAA2B;EAC5C;EAEA,MAAM;IAAES,UAAU;IAAEC;EAAY,CAAC,GAAGhD,WAAW;EAE/C,MAAMiD,eAAe,GAAGvC,KAAK,GACzBsC,WAAW,CAACE,KAAK,IAAIvF,cAAc,GACnCA,cAAc;EAElB,MAAMwF,cAAc,GAAG1C,IAAI,GACvBsC,UAAU,CAACG,KAAK,IAAIvF,cAAc,GAClCA,cAAc;EAElB,MAAMyF,sCAAsC,GAC1C1F,yCAAyC,CAAC;IACxCkF,eAAe;IACfK,eAAe;IACfE,cAAc;IACdb,iBAAiB;IACjBe,WAAW,EAAExB,iBAAiB;IAC9ByB,IAAI,EAAE/F,SAAS,CAACgG,IAAI;IACpBnC;EACF,CAAC,CAAC;EAEJ,MAAM;IACJoC,cAAc;IACdC,WAAW;IACXC,oBAAoB;IACpBC,gBAAgB;IAChBC,UAAU;IACVC,eAAe;IACf3E;EACF,CAAC,GAAGR,kBAAkB,CAAC;IACrBW,cAAc;IACdE,oBAAoB;IACpBJ,oBAAoB;IACpBK,SAAS;IACTV,QAAQ;IACRG,KAAK;IACLU;EACF,CAAC,CAAC;EAEF,MAAMmE,cAAc,GAAG;IACrBD,eAAe;IACfE,mBAAmB,EAAEpE,KAAK,CAAC0B,SAAS;IACpC2C,oBAAoB,EAAErE,KAAK,CAAC0B;EAC9B,CAAC;EAED,MAAM4C,UAAU,GAAGlG,yBAAyB,GAAGkE,QAAQ;EACvD,MAAMiC,SAAS,GAAGpG,yBAAyB,GAAGmE,QAAQ;EAEtD,MAAMkC,UAAU,GAAGnE,WAAW,CAACoE,WAAW,CAAClB,KAAK;EAChD,MAAMmB,WAAW,GAAGrE,WAAW,CAACoE,WAAW,CAAC/B,MAAM;EAClD,MAAMiC,cAAc,GAAGH,UAAU,GAAG,CAAC;EACrC,MAAMI,eAAe,GAAGF,WAAW,GAAG,CAAC;EAEvC,MAAMG,mBAAmB,GACvB,CAACzH,WAAW,CAAC0B,YAAY,CAAC,CAAC,CAACgG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,KACvCH,cAAc,GAAIL,UAAU,GAAGE,UAAU,GAAI,CAAC,CAAC,GAClD,CAAC,CAAC,GAAGF,UAAU,KACZlH,WAAW,CAAC0B,YAAY,CAAC,CAAC,CAACgG,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAC3C5B,WAAW;EAEf,MAAM6B,cAAc,GAAGjF,KAAK,GACxB,CAACT,KAAK,GAAGd,mBAAmB,GAAGD,gBAAgB,IAAIL,uBAAuB,GAC1EkE,UAAU,GAAGF,iBAAiB;EAElC,MAAM+C,WAAW,GAAGrG,oBAAoB,CAAC+F,WAAW,EAAEhC,MAAM,EAAEqC,cAAc,CAAC;EAE7E,MAAME,WAAW,GAAGrG,yBAAyB,CAC3C8F,WAAW,EACXM,WAAW,EACX5E,SAAS,IAAIsC,MAAM,GAAG,CAAC,GAAG,CAACA,MAAM,GAAGqC,cAAc,GAAG,CAAC,GAAG,CAC3D,CAAC;EAED,IAAIrC,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAExCwC,OAAO,CAACC,IAAI,CAAC,kDAAkD,CAAC;EAClE;EAEA,MAAMC,eAAe,GAAG;IACtB1C,MAAM,EAAEA,MAAM,GAAG,CAACA,MAAM,GAAG,IAAI;IAC/BkC,eAAe;IACfS,MAAM,EAAEnD,iBAAiB;IACzB9B,SAAS,EAAEA,SAAS,GAAGA,SAAS,GAAG,IAAI;IACvCN,KAAK,EAAEA,KAAK,GAAGA,KAAK,GAAG,IAAI;IAC3BmF,WAAW;IACX3C,QAAQ;IACRE,UAAU;IACVnD,KAAK;IACLiG,KAAK,EAAEf,SAAS;IAChBjD,SAAS;IACTiE,MAAM,EAAEjI,UAAU,CAAC+E,OAAO,CACxBvC,KAAK,GAAGyF,MAAM,CAACC,cAAc,GAAGD,MAAM,CAACE,SACzC;EACF,CAAC;EAED,MAAMC,GAAG,GAAG7G,gBAAgB,CAACuG,eAAe,CAAC;EAE7C,MAAMO,WAAW,GAAGnH,iBAAiB,CAAAoH,MAAA,CAAAC,MAAA,KAChCT,eAAe;IAClBM;EAAA,EACD,CAAC;EAEF,MAAMI,mBAAmB,GACvB,CAAClB,eAAe,IAAIK,WAAW,GAAG5G,wBAAwB,CAAC;EAE7D,MAAM0H,kBAAkB,GAAGhE,gBAAgB,GACvC1B,WAAW,CAAC2F,OAAO,GACnB3F,WAAW,CAACoE,WAAW,CAACwB,QAAQ,GAChC,CAAC,GACD,CAAC;EAEL,MAAMC,SAAS,GACbxD,MAAM,KACL5C,KAAK,GAAIT,KAAK,GAAGd,mBAAmB,GAAGD,gBAAgB,GAAI6D,UAAU,CAAC;EAEzE,MAAMgE,UAAU,GACdnB,WAAW,IACV,CAACtC,MAAM,GAAI5C,KAAK,GAAG7B,uBAAuB,GAAGgE,iBAAiB,GAAI,CAAC,CAAC;EAEvE,MAAMmE,eAAe,GAAG,CAACD,UAAU,GAAGnI,cAAc,IAAI,CAAC;EAEzD,MAAMqI,oBAAoB,GAAGjD,UAAU,CAACV,MAAM,GAC1CjE,6BAA6B,CAAAmH,MAAA,CAAAC,MAAA;IAC3BnD,MAAM,EAAEyD;EAAU,GACfR,WAAW;IACdW,WAAW,EAAElD,UAAU,CAACV;EAAA,EACzB,CAAC,GACF,IAAI;EAER,MAAM6D,qBAAqB,GAAGlD,WAAW,CAACX,MAAM,GAC5CjE,6BAA6B,CAAAmH,MAAA,CAAAC,MAAA;IAC3BnD,MAAM,EAAEyD;EAAU,GACfR,WAAW;IACdW,WAAW,EAAEjD,WAAW,CAACX;EAAA,EAC1B,CAAC,GACF,IAAI;EAER,MAAM8D,UAAU,GAAG;IACjBnH,KAAK;IACLsB,oBAAoB;IACpBoF,kBAAkB;IAClBU,UAAU,EAAEnH,KAAK;IACjBoH,gBAAgB,EAAEnB,MAAM,CAACoB,WAAW;IACpCb,mBAAmB;IACnBjB,mBAAmB;IACnBlD,IAAI;IACJW,QAAQ;IACRE,UAAU;IACVC,UAAU;IACV6B,UAAU;IACVsC,aAAa,EAAE1I,qBAAqB;IACpC+G,WAAW;IACX/B,WAAW,EAAE5B,SAAS,GAClBlE,WAAW,CAAC0H,KAAK,GACf3B,YAAY,GACZD,WAAW,GACbA,WAAW;IACfC,YAAY,EAAE7B,SAAS,GACnBlE,WAAW,CAAC0H,KAAK,GACf5B,WAAW,GACXC,YAAY,GACdA,YAAY;IAChBpB,gBAAgB;IAChB+B,WAAW;IACXE,gBAAgB;IAChBC,UAAU;IACVvC,SAAS;IACTmF,qBAAqB,EAAE1F,IAAI,CAAC0F,qBAAqB;IACjD5F,MAAM;IACNC,YAAY;IACZ4F,OAAO,EACLzG,WAAW,CAAC0G,KAAK,IAAI1G,WAAW,CAAC2B,OAAO,GACpC3B,WAAW,CAACoE,WAAW,CAACwB,QAAQ,GAC9B,CAAC,GACD,CAAC,GACH;EACR,CAAC;EAED,MAAMe,gBAAgB,GAAG;IACvB,CAACtJ,aAAa,CAACuJ,IAAI,GAAGZ,oBAAoB;IAC1C,CAAC3I,aAAa,CAACwJ,KAAK,GAAGX;EACzB,CAAC;EACD,MAAMY,aAAa,GAAG;IACpB,CAACzJ,aAAa,CAACuJ,IAAI,GAAGrG,uBAAuB;IAC7C,CAAClD,aAAa,CAACwJ,KAAK,GAAGrG;EACzB,CAAC;EAED,IAAIuG,cAAuC,GAAG;IAC5CzE,iBAAiB;IACjBM,eAAe;IACfzC,UAAU;IACVyE,WAAW,EAAE;MACX,CAACtH,aAAa,CAAC0J,KAAK,GAAGL,gBAAgB;MACvC,CAACrJ,aAAa,CAAC2J,IAAI,GAAGlB;IACxB,CAAC;IACDe,aAAa;IACbI,kBAAkB,EAAElH,WAAW,CAAC2B,OAAO;IACvC6E,qBAAqB,EAAE1F,IAAI,CAAC0F,qBAAqB;IACjD1H;EACF,CAAC;EACD,IAAI8D,eAAe,CAACuE,MAAM,EAAE;IAC1BJ,cAAc,GAAAxB,MAAA,CAAAC,MAAA,KACTuB,cAAc;MACjBtG,IAAI;MACJC,KAAK;MACL0G,SAAS,EAAA7B,MAAA,CAAAC,MAAA,KAAOlE,IAAI;QAAEW,QAAQ;QAAEE,UAAU;QAAEC;MAAA,EAAY;MACxDiF,OAAO,EAAErH,WAAW,CAAC2F;IAAA,EACtB;EACH;EAEA,OACE7I,KAAA,CAAAgD,aAAA,CAAC3C,IAAI;IAACuC,KAAK,EAAE,CAACoE,cAAc,EAAEtB,SAAS;EAAE,GACvC1F,KAAA,CAAAgD,aAAA,CAAC1C,SAAS;IACRsC,KAAK,EAAEJ,cAAe;IACtBoC,gBAAgB,EAAEA,gBAAiB;IACnC1B,WAAW,EAAEA,WAAY;IACzB0D,oBAAoB,EAAEA,oBAAqB;IAC3CzE,KAAK,EAAEA,KAAM;IACbkC,MAAM,EAAEA,MAAO;IACfsC,WAAW,EAAEA,WAAY;IACzB9D,KAAK,EAAEA;EAAM,CACd,CAAC,EACF7C,KAAA,CAAAgD,aAAA,CAAC3C,IAAI;IACHuC,KAAK,EAAE,CACLwF,MAAM,CAACoC,cAAc,EACrB;MACEzB;IACF,CAAC;EACD,GAED,CAAC5E,SAAS,IAAIlB,SAAS,IAAI,CAAC,CAACf,KAAK,IAAI,CAACF,QAAQ,IAG9ChC,KAAA,CAAAgD,aAAA,CAAC3C,IAAI;IACHyD,MAAM,EAAC,iBAAiB;IACxB2G,aAAa,EAAC,MAAM;IACpB7H,KAAK,EAAE,CACLzC,UAAU,CAACuK,YAAY,EACvB/H,KAAK,GAAGyF,MAAM,CAACuC,mBAAmB,GAAGvC,MAAM,CAACwC,cAAc,EAC1D;MACE7D,eAAe,EACbrB,SAAS,CAACqB,eAAe,IAAIC,cAAc,CAACD,eAAe;MAC7DpD,IAAI,EAAEoC,WAAW;MACjBnC,KAAK,EAAEoC;IACT,CAAC;EACD,CACH,CACF,EACA9D,KAAK,GACJlC,KAAA,CAAAgD,aAAA,CAACnB,UAAU,EAAAgJ,QAAA;IACThC,OAAO,EAAE3F,WAAW,CAAC2F,OAAQ;IAC7B1G,KAAK,EAAEe,WAAW,CAACf,KAAM;IACzB0C,OAAO,EAAE3B,WAAW,CAAC2B,OAAQ;IAC7BiG,MAAM,EAAEC,OAAO,CAAC7H,WAAW,CAAC0G,KAAK,IAAIP,UAAU,CAACC,UAAU,CAAE;IAC5D0B,mBAAmB,EAAE9H,WAAW,CAACoE,WAAW,CAACwB,QAAS;IACtDmC,gBAAgB,EAAE/H,WAAW,CAACoE,WAAW,CAAClB;EAAM,GAC5CiD,UAAU,CACf,CAAC,GACA,IAAI,EACPvG,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAA2F,MAAA,CAAAC,MAAA,KACF1E,IAAI;IACPkH,GAAG,EAAE/H,QAAQ;IACbI,YAAY;IACZiG,WAAW,EAAEtH,KAAK,GAAGgB,WAAW,CAACsG,WAAW,GAAGxF,IAAI,CAACwF,WAAW;IAC/DvH,QAAQ,EAAE,CAACD,QAAQ,IAAIC,QAAQ;IAC/BG,cAAc;IACdE,WAAW,EACT,OAAOA,WAAW,KAAK,WAAW,GAAGqE,WAAW,GAAGrE,WAAW;IAChEuB,oBAAoB,EAAEA,oBAAoB,IAAIgD,gBAAgB;IAC9DzD,OAAO;IACPE,MAAM;IACN6H,qBAAqB,EAAE,aAAa;IACpClI,SAAS;IACTL,KAAK,EAAE,CACLwF,MAAM,CAACgD,KAAK,EACZ,CAACnI,SAAS,IAAKA,SAAS,IAAIsC,MAAO,GAAG;MAAEA,MAAM,EAAEyD;IAAW,CAAC,GAAG,CAAC,CAAC,EACjER,WAAW,EAAAC,MAAA,CAAAC,MAAA;MAET3C,WAAW;MACXC;IAAY,GACTxB,IAAI;MACPW,QAAQ;MACRE,UAAU;MACVC,UAAU;MACV+F,KAAK,EAAE3E,cAAc;MACrB4E,iBAAiB,EAAErI,SAAS,GAAG,KAAK,GAAG,QAAQ;MAC/CwC,SAAS,EAAEA,SAAS,GAChBA,SAAS,GACTxF,WAAW,CAAC0B,YAAY,CAAC,CAAC,CAACgG,KAAK,GAChC,OAAO,GACP;IAAA,IAENzH,QAAQ,CAACkE,EAAE,KAAK,KAAK,IAAI;MAAEmH,OAAO,EAAE;IAAO,CAAC,EAC5CjF,sCAAsC,EACtCvC,YAAY,CACb;IACDD;EAAA,EACD,CACG,CAAC,EACP9D,KAAA,CAAAgD,aAAA,CAACtC,kBAAkB,EAAKuJ,cAAiB,CACrC,CAAC;AAEX,CAAC;AAED,eAAenI,aAAa;AAE5B,MAAMsG,MAAM,GAAGjI,UAAU,CAACqL,MAAM,CAAC;EAC/BhC,WAAW,EAAE;IACXiC,QAAQ,EAAE,UAAU;IACpB9H,IAAI,EAAE;EACR,CAAC;EACD6G,cAAc,EAAE;IACdkB,UAAU,EAAE,CAAC;IACbC,aAAa,EAAE;EACjB,CAAC;EACDP,KAAK,EAAE;IACLQ,MAAM,EAAE;EACV,CAAC;EACDtD,SAAS,EAAE;IACToD,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE;EACjB,CAAC;EACDtD,cAAc,EAAE;IACdqD,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE;EACjB,CAAC;EACDf,cAAc,EAAE;IACdrF,MAAM,EAAE,EAAE;IACVsG,MAAM,EAAE;EACV,CAAC;EACDlB,mBAAmB,EAAE;IACnBpF,MAAM,EAAE,EAAE;IACVsG,MAAM,EAAE;EACV;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}