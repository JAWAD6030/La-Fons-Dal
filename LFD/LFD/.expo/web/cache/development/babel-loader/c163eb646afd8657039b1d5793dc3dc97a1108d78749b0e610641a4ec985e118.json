{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AppbarAction from './AppbarAction';\nimport AppbarBackAction from './AppbarBackAction';\nimport AppbarContent from './AppbarContent';\nimport overlay from '../../styles/overlay';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport Tooltip from '../Tooltip/Tooltip';\nconst borderStyleProperties = ['borderRadius', 'borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius'];\nexport const getAppbarColor = (theme, elevation, customBackground, elevated) => {\n  const {\n    isV3,\n    dark: isDarkTheme,\n    mode,\n    colors\n  } = theme;\n  const isAdaptiveMode = mode === 'adaptive';\n  if (customBackground) {\n    return customBackground;\n  }\n  if (!isV3) {\n    if (isDarkTheme && isAdaptiveMode) {\n      return overlay(elevation, colors === null || colors === void 0 ? void 0 : colors.surface);\n    }\n    return colors.primary;\n  }\n  if (elevated) {\n    return theme.colors.elevation.level2;\n  }\n  return colors.surface;\n};\nexport const getAppbarBorders = style => {\n  const borders = {};\n  for (const property of borderStyleProperties) {\n    const value = style[property];\n    if (value) {\n      borders[property] = value;\n    }\n  }\n  return borders;\n};\nexport const DEFAULT_APPBAR_HEIGHT = 56;\nconst MD3_DEFAULT_APPBAR_HEIGHT = 64;\nexport const modeAppbarHeight = {\n  small: MD3_DEFAULT_APPBAR_HEIGHT,\n  medium: 112,\n  large: 152,\n  'center-aligned': MD3_DEFAULT_APPBAR_HEIGHT\n};\nexport const modeTextVariant = {\n  small: 'titleLarge',\n  medium: 'headlineSmall',\n  large: 'headlineMedium',\n  'center-aligned': 'titleLarge'\n};\nexport const renderAppbarContent = _ref => {\n  let {\n    children,\n    isDark,\n    shouldCenterContent = false,\n    isV3,\n    renderOnly,\n    renderExcept,\n    mode = 'small',\n    theme\n  } = _ref;\n  return React.Children.toArray(children).filter(child => child != null && typeof child !== 'boolean').filter(child => renderExcept ? !renderExcept.includes(child.type) : child).filter(child => renderOnly ? renderOnly.includes(child.type) : child).map((child, i) => {\n    if (!React.isValidElement(child) || ![AppbarContent, AppbarAction, AppbarBackAction, Tooltip].includes(child.type)) {\n      return child;\n    }\n    const props = {\n      theme,\n      color: typeof child.props.color !== 'undefined' ? child.props.color : isV3 ? undefined : isDark ? white : black\n    };\n    if (child.type === AppbarContent) {\n      props.mode = mode;\n      props.style = [isV3 ? i === 0 && !shouldCenterContent && styles.v3Spacing : i !== 0 && styles.v2Spacing, shouldCenterContent && styles.centerAlignedContent, child.props.style];\n    }\n    return React.cloneElement(child, props);\n  });\n};\nconst styles = StyleSheet.create({\n  centerAlignedContent: {\n    alignItems: 'center'\n  },\n  v2Spacing: {\n    marginLeft: 8\n  },\n  v3Spacing: {\n    marginLeft: 12\n  }\n});","map":{"version":3,"names":["React","StyleSheet","AppbarAction","AppbarBackAction","AppbarContent","overlay","black","white","Tooltip","borderStyleProperties","getAppbarColor","theme","elevation","customBackground","elevated","isV3","dark","isDarkTheme","mode","colors","isAdaptiveMode","surface","primary","level2","getAppbarBorders","style","borders","property","value","DEFAULT_APPBAR_HEIGHT","MD3_DEFAULT_APPBAR_HEIGHT","modeAppbarHeight","small","medium","large","modeTextVariant","renderAppbarContent","_ref","children","isDark","shouldCenterContent","renderOnly","renderExcept","Children","toArray","filter","child","includes","type","map","i","isValidElement","props","color","undefined","styles","v3Spacing","v2Spacing","centerAlignedContent","cloneElement","create","alignItems","marginLeft"],"sources":["C:\\Users\\user\\Desktop\\projet perso\\La Fons'Dal\\LFD\\LFD\\node_modules\\react-native-paper\\src\\components\\Appbar\\utils.ts"],"sourcesContent":["import React from 'react';\nimport type { ColorValue, StyleProp, ViewStyle } from 'react-native';\nimport { StyleSheet, Animated } from 'react-native';\n\nimport AppbarAction from './AppbarAction';\nimport AppbarBackAction from './AppbarBackAction';\nimport AppbarContent from './AppbarContent';\nimport overlay from '../../styles/overlay';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme, ThemeProp } from '../../types';\nimport Tooltip from '../Tooltip/Tooltip';\n\nexport type AppbarModes = 'small' | 'medium' | 'large' | 'center-aligned';\n\nconst borderStyleProperties = [\n  'borderRadius',\n  'borderTopLeftRadius',\n  'borderTopRightRadius',\n  'borderBottomRightRadius',\n  'borderBottomLeftRadius',\n];\n\nexport const getAppbarColor = (\n  theme: InternalTheme,\n  elevation: number,\n  customBackground?: ColorValue,\n  elevated?: boolean\n) => {\n  const { isV3, dark: isDarkTheme, mode, colors } = theme;\n  const isAdaptiveMode = mode === 'adaptive';\n  if (customBackground) {\n    return customBackground;\n  }\n\n  if (!isV3) {\n    if (isDarkTheme && isAdaptiveMode) {\n      return overlay(elevation, colors?.surface);\n    }\n\n    return colors.primary;\n  }\n\n  if (elevated) {\n    return theme.colors.elevation.level2;\n  }\n\n  return colors.surface;\n};\n\nexport const getAppbarBorders = (\n  style:\n    | Animated.Value\n    | Animated.AnimatedInterpolation<string | number>\n    | Animated.WithAnimatedObject<ViewStyle>\n) => {\n  const borders: Record<string, number> = {};\n\n  for (const property of borderStyleProperties) {\n    const value = style[property as keyof typeof style];\n    if (value) {\n      borders[property] = value;\n    }\n  }\n\n  return borders;\n};\n\ntype RenderAppbarContentProps = {\n  children: React.ReactNode;\n  isDark: boolean;\n  shouldCenterContent?: boolean;\n  isV3: boolean;\n  renderOnly?: (React.ComponentType<any> | false)[];\n  renderExcept?: React.ComponentType<any>[];\n  mode?: AppbarModes;\n  theme?: ThemeProp;\n};\n\nexport const DEFAULT_APPBAR_HEIGHT = 56;\nconst MD3_DEFAULT_APPBAR_HEIGHT = 64;\n\nexport const modeAppbarHeight = {\n  small: MD3_DEFAULT_APPBAR_HEIGHT,\n  medium: 112,\n  large: 152,\n  'center-aligned': MD3_DEFAULT_APPBAR_HEIGHT,\n};\n\nexport const modeTextVariant = {\n  small: 'titleLarge',\n  medium: 'headlineSmall',\n  large: 'headlineMedium',\n  'center-aligned': 'titleLarge',\n} as const;\n\nexport const renderAppbarContent = ({\n  children,\n  isDark,\n  shouldCenterContent = false,\n  isV3,\n  renderOnly,\n  renderExcept,\n  mode = 'small',\n  theme,\n}: RenderAppbarContentProps) => {\n  return (\n    React.Children.toArray(children as React.ReactNode | React.ReactNode[])\n      .filter((child) => child != null && typeof child !== 'boolean')\n      .filter((child) =>\n        // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\n        renderExcept ? !renderExcept.includes(child.type) : child\n      )\n      // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\n      .filter((child) => (renderOnly ? renderOnly.includes(child.type) : child))\n      .map((child, i) => {\n        if (\n          !React.isValidElement(child) ||\n          ![AppbarContent, AppbarAction, AppbarBackAction, Tooltip].includes(\n            // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\n            child.type\n          )\n        ) {\n          return child;\n        }\n\n        const props: {\n          color?: string;\n          style?: StyleProp<ViewStyle>;\n          mode?: AppbarModes;\n          theme?: ThemeProp;\n        } = {\n          theme,\n          color:\n            typeof child.props.color !== 'undefined'\n              ? child.props.color\n              : isV3\n              ? undefined\n              : isDark\n              ? white\n              : black,\n        };\n\n        if (child.type === AppbarContent) {\n          props.mode = mode;\n          props.style = [\n            isV3\n              ? i === 0 && !shouldCenterContent && styles.v3Spacing\n              : i !== 0 && styles.v2Spacing,\n            shouldCenterContent && styles.centerAlignedContent,\n            child.props.style,\n          ];\n        }\n        return React.cloneElement(child, props);\n      })\n  );\n};\n\nconst styles = StyleSheet.create({\n  centerAlignedContent: {\n    alignItems: 'center',\n  },\n  v2Spacing: {\n    marginLeft: 8,\n  },\n  v3Spacing: {\n    marginLeft: 12,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}