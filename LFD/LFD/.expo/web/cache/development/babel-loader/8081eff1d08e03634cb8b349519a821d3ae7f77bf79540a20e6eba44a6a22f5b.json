{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\projet perso\\\\La Fons'Dal\\\\LFD\\\\LFD\\\\node_modules\\\\react-native-image-slider-box\\\\dist\\\\SliderBox.js\";\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Carousel, { Pagination } from \"react-native-snap-carousel\";\nimport styles from \"./SliderBox.style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = Dimensions.get(\"window\").width;\nexport class SliderBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentImage: props.firstItem || 0,\n      loading: []\n    };\n    this.onCurrentImagePressedHandler = this.onCurrentImagePressedHandler.bind(this);\n    this.onSnap = this.onSnap.bind(this);\n    this._renderItem = this._renderItem.bind(this);\n  }\n  componentDidMount() {}\n  onCurrentImagePressedHandler() {\n    if (this.props.onCurrentImagePressed) {\n      this.props.onCurrentImagePressed(this.state.currentImage);\n    }\n  }\n  onSnap(index) {\n    this._ref.snapToItem(index);\n    const {\n      currentImageEmitter\n    } = this.props;\n    this.setState({\n      currentImage: index\n    }, () => {\n      if (currentImageEmitter) {\n        currentImageEmitter(this.state.currentImage);\n      }\n    });\n  }\n  _renderItem({\n    item,\n    index\n  }) {\n    const {\n      ImageComponent,\n      ImageComponentStyle = {},\n      LoaderComponent,\n      sliderBoxHeight,\n      disableOnPress,\n      resizeMethod,\n      resizeMode,\n      imageLoadingColor = \"#E91E63\",\n      underlayColor = \"transparent\",\n      activeOpacity = 0.85\n    } = this.props;\n    return _jsxDEV(View, {\n      style: {\n        position: \"relative\",\n        justifyContent: \"center\"\n      },\n      children: [_jsxDEV(TouchableHighlight, {\n        underlayColor: underlayColor,\n        disabled: disableOnPress,\n        onPress: this.onCurrentImagePressedHandler,\n        activeOpacity: activeOpacity,\n        children: _jsxDEV(ImageComponent, Object.assign({\n          style: [{\n            width: \"100%\",\n            height: sliderBoxHeight || 200,\n            alignSelf: \"center\"\n          }, ImageComponentStyle],\n          source: typeof item === \"string\" ? {\n            uri: item\n          } : item,\n          resizeMethod: resizeMethod || \"resize\",\n          resizeMode: resizeMode || \"cover\",\n          onLoadEnd: () => {\n            let t = this.state.loading;\n            t[index] = true;\n            this.setState({\n              loading: t\n            });\n          }\n        }, this.props), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), !this.state.loading[index] && _jsxDEV(LoaderComponent, {\n        index: index,\n        size: \"large\",\n        color: imageLoadingColor,\n        style: {\n          position: \"absolute\",\n          alignSelf: \"center\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n  get pagination() {\n    const {\n      currentImage\n    } = this.state;\n    const {\n      images,\n      dotStyle,\n      dotColor,\n      inactiveDotColor,\n      paginationBoxStyle,\n      paginationBoxVerticalPadding\n    } = this.props;\n    return _jsxDEV(Pagination, Object.assign({\n      borderRadius: 2,\n      dotsLength: images.length,\n      activeDotIndex: currentImage,\n      dotStyle: dotStyle || styles.dotStyle,\n      dotColor: dotColor || colors.dotColors,\n      inactiveDotColor: inactiveDotColor || colors.white,\n      inactiveDotScale: 0.8,\n      carouselRef: this._ref,\n      inactiveDotOpacity: 0.8,\n      tappableDots: !!this._ref,\n      containerStyle: [styles.paginationBoxStyle, paginationBoxVerticalPadding ? {\n        paddingVertical: paginationBoxVerticalPadding\n      } : {}, paginationBoxStyle ? paginationBoxStyle : {}]\n    }, this.props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  }\n  render() {\n    const {\n      images,\n      circleLoop,\n      autoplay,\n      parentWidth,\n      loopClonesPerSide,\n      autoplayDelay,\n      useScrollView,\n      autoplayInterval\n    } = this.props;\n    return _jsxDEV(View, {\n      children: [_jsxDEV(Carousel, Object.assign({\n        autoplayDelay: autoplayDelay,\n        autoplayInterval: autoplayInterval || 3000,\n        layout: \"default\",\n        useScrollView: useScrollView,\n        data: images,\n        ref: c => this._ref = c,\n        loop: circleLoop || false,\n        enableSnap: true,\n        autoplay: autoplay || false,\n        itemWidth: parentWidth || width,\n        sliderWidth: parentWidth || width,\n        loopClonesPerSide: loopClonesPerSide || 5,\n        renderItem: this._renderItem,\n        onSnapToItem: index => this.onSnap(index)\n      }, this.props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), images.length > 1 && this.pagination]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst colors = {\n  dotColors: \"#BDBDBD\",\n  white: \"#FFFFFF\"\n};\nSliderBox.defaultProps = {\n  ImageComponent: Image,\n  LoaderComponent: ActivityIndicator\n};","map":{"version":3,"names":["React","Component","View","Image","ActivityIndicator","TouchableHighlight","Dimensions","Carousel","Pagination","styles","jsxDEV","_jsxDEV","width","get","SliderBox","constructor","props","state","currentImage","firstItem","loading","onCurrentImagePressedHandler","bind","onSnap","_renderItem","componentDidMount","onCurrentImagePressed","index","_ref","snapToItem","currentImageEmitter","setState","item","ImageComponent","ImageComponentStyle","LoaderComponent","sliderBoxHeight","disableOnPress","resizeMethod","resizeMode","imageLoadingColor","underlayColor","activeOpacity","style","position","justifyContent","children","disabled","onPress","Object","assign","height","alignSelf","source","uri","onLoadEnd","t","fileName","_jsxFileName","lineNumber","columnNumber","size","color","pagination","images","dotStyle","dotColor","inactiveDotColor","paginationBoxStyle","paginationBoxVerticalPadding","borderRadius","dotsLength","length","activeDotIndex","colors","dotColors","white","inactiveDotScale","carouselRef","inactiveDotOpacity","tappableDots","containerStyle","paddingVertical","render","circleLoop","autoplay","parentWidth","loopClonesPerSide","autoplayDelay","useScrollView","autoplayInterval","layout","data","ref","c","loop","enableSnap","itemWidth","sliderWidth","renderItem","onSnapToItem","defaultProps"],"sources":["C:/Users/user/Desktop/projet perso/La Fons'Dal/LFD/LFD/node_modules/react-native-image-slider-box/dist/SliderBox.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Image,\n  ActivityIndicator,\n  TouchableHighlight,\n  Dimensions,\n} from \"react-native\";\n\nimport Carousel, { Pagination } from \"react-native-snap-carousel\"; //Thank From distributer(s) of this lib\nimport styles from \"./SliderBox.style\";\n\n// -------------------Props--------------------\n// images\n// onCurrentImagePressed\n// sliderBoxHeight\n// parentWidth\n// dotColor\n// inactiveDotColor\n// dotStyle\n// paginationBoxVerticalPadding\n// circleLoop\n// autoplay\n// ImageComponent\n// ImageLoader\n// paginationBoxStyle\n// resizeMethod\n// resizeMode\n// ImageComponentStyle,\n// imageLoadingColor = \"#E91E63\"\n// firstItem = 0\n// activeOpacity\n// autoplayInterval = 3000\n\nconst width = Dimensions.get(\"window\").width;\n\nexport class SliderBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentImage: props.firstItem || 0,\n      loading: [],\n    };\n    this.onCurrentImagePressedHandler =\n      this.onCurrentImagePressedHandler.bind(this);\n    this.onSnap = this.onSnap.bind(this);\n    this._renderItem = this._renderItem.bind(this);\n  }\n\n  componentDidMount() {\n    //let a = [...Array(this.props.images.length).keys()].map((i) => false);\n  }\n\n  onCurrentImagePressedHandler() {\n    if (this.props.onCurrentImagePressed) {\n      this.props.onCurrentImagePressed(this.state.currentImage);\n    }\n  }\n\n  onSnap(index) {\n    this._ref.snapToItem(index);\n    const { currentImageEmitter } = this.props;\n    this.setState({ currentImage: index }, () => {\n      if (currentImageEmitter) {\n        currentImageEmitter(this.state.currentImage);\n      }\n    });\n  }\n\n  _renderItem({ item, index }) {\n    const {\n      ImageComponent,\n      ImageComponentStyle = {},\n      LoaderComponent,\n      sliderBoxHeight,\n      disableOnPress,\n      resizeMethod,\n      resizeMode,\n      imageLoadingColor = \"#E91E63\",\n      underlayColor = \"transparent\",\n      activeOpacity = 0.85,\n    } = this.props;\n    return (\n      <View\n        style={{\n          position: \"relative\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TouchableHighlight\n          key={index}\n          underlayColor={underlayColor}\n          disabled={disableOnPress}\n          onPress={this.onCurrentImagePressedHandler}\n          activeOpacity={activeOpacity}\n        >\n          <ImageComponent\n            style={[\n              {\n                width: \"100%\",\n                height: sliderBoxHeight || 200,\n                alignSelf: \"center\",\n              },\n              ImageComponentStyle,\n            ]}\n            source={typeof item === \"string\" ? { uri: item } : item}\n            resizeMethod={resizeMethod || \"resize\"}\n            resizeMode={resizeMode || \"cover\"}\n            //onLoad={() => {}}\n            //onLoadStart={() => {}}\n            onLoadEnd={() => {\n              let t = this.state.loading;\n              t[index] = true;\n              this.setState({ loading: t });\n            }}\n            {...this.props}\n          />\n        </TouchableHighlight>\n        {!this.state.loading[index] && (\n          <LoaderComponent\n            index={index}\n            size=\"large\"\n            color={imageLoadingColor}\n            style={{\n              position: \"absolute\",\n              alignSelf: \"center\",\n            }}\n          />\n        )}\n      </View>\n    );\n  }\n\n  get pagination() {\n    const { currentImage } = this.state;\n    const {\n      images,\n      dotStyle,\n      dotColor,\n      inactiveDotColor,\n      paginationBoxStyle,\n      paginationBoxVerticalPadding,\n    } = this.props;\n    return (\n      <Pagination\n        borderRadius={2}\n        dotsLength={images.length}\n        activeDotIndex={currentImage}\n        dotStyle={dotStyle || styles.dotStyle}\n        dotColor={dotColor || colors.dotColors}\n        inactiveDotColor={inactiveDotColor || colors.white}\n        inactiveDotScale={0.8}\n        carouselRef={this._ref}\n        inactiveDotOpacity={0.8}\n        tappableDots={!!this._ref}\n        containerStyle={[\n          styles.paginationBoxStyle,\n          paginationBoxVerticalPadding\n            ? { paddingVertical: paginationBoxVerticalPadding }\n            : {},\n          paginationBoxStyle ? paginationBoxStyle : {},\n        ]}\n        {...this.props}\n      />\n    );\n  }\n\n  render() {\n    const {\n      images,\n      circleLoop,\n      autoplay,\n      parentWidth,\n      loopClonesPerSide,\n      autoplayDelay,\n      useScrollView,\n      autoplayInterval,\n    } = this.props;\n\n    return (\n      <View>\n        <Carousel\n          autoplayDelay={autoplayDelay}\n          autoplayInterval={autoplayInterval || 3000}\n          layout={\"default\"}\n          useScrollView={useScrollView}\n          data={images}\n          ref={(c) => (this._ref = c)}\n          loop={circleLoop || false}\n          enableSnap={true}\n          autoplay={autoplay || false}\n          itemWidth={parentWidth || width}\n          sliderWidth={parentWidth || width}\n          loopClonesPerSide={loopClonesPerSide || 5}\n          renderItem={this._renderItem}\n          onSnapToItem={(index) => this.onSnap(index)}\n          {...this.props}\n        />\n        {images.length > 1 && this.pagination}\n      </View>\n    );\n  }\n}\n\nconst colors = {\n  dotColors: \"#BDBDBD\",\n  white: \"#FFFFFF\",\n};\n\nSliderBox.defaultProps = {\n  ImageComponent: Image,\n  LoaderComponent: ActivityIndicator,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}