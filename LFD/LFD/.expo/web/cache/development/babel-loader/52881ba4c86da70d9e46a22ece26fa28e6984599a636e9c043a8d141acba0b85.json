{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useRef, useEffect } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar FadeInView = function FadeInView(props) {\n  var fadeAnim = useRef(new Animated.Value(0)).current;\n  useEffect(function () {\n    Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 1400,\n      useNativeDriver: true\n    }).start();\n  }, [fadeAnim]);\n  return _jsx(Animated.View, {\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      opacity: fadeAnim\n    }),\n    children: props.children\n  });\n};\nexport default (function () {\n  var _useFonts = useFonts({\n      \"PermanentMarker\": require(\"../../../assets/fonts/PermanentMarker-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsloaded = _useFonts2[0];\n  useEffect(function () {\n    function prepare() {\n      return _prepare.apply(this, arguments);\n    }\n    function _prepare() {\n      _prepare = _asyncToGenerator(function* () {\n        yield SplashScreen.preventAutoHideAsync();\n      });\n      return _prepare.apply(this, arguments);\n    }\n    prepare();\n  }, []);\n  if (!fontsloaded) {\n    return undefined;\n  } else {\n    SplashScreen.hideAsync();\n  }\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'flex-end'\n    },\n    children: _jsx(FadeInView, {\n      style: {\n        justifyContent: 'center',\n        width: 380,\n        height: 225,\n        backgroundColor: 'transparent'\n      },\n      children: _jsx(Text, {\n        style: {\n          fontFamily: 'PermanentMarker',\n          fontSize: 21,\n          color: \"white\"\n        },\n        children: \"Une envie de se retaper en friandise, grosse soir\\xE8e entre potes ou bien le syndrome de Flemme, Tranquille... La Fons'Dal est la pour toi :-D!\"\n      })\n    })\n  });\n});","map":{"version":3,"names":["React","useRef","useEffect","Animated","Text","View","useFonts","SplashScreen","jsx","_jsx","FadeInView","props","fadeAnim","Value","current","timing","toValue","duration","useNativeDriver","start","style","_objectSpread","opacity","children","_useFonts","require","_useFonts2","_slicedToArray","fontsloaded","prepare","_prepare","apply","arguments","_asyncToGenerator","preventAutoHideAsync","undefined","hideAsync","flex","alignItems","justifyContent","width","height","backgroundColor","fontFamily","fontSize","color"],"sources":["C:/Users/j.achak/Desktop/projet perso/LFD/LFD/src/screens/components/textban.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { Animated, Text, View } from 'react-native';\r\nimport { useFonts } from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\n\r\n\r\nconst FadeInView = props => {\r\n  const fadeAnim = useRef(new Animated.Value(0)).current; // Initial value for opacity: 0\r\n\r\n  useEffect(() => {\r\n    Animated.timing(fadeAnim, {\r\n      toValue: 1,\r\n      duration: 1400,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  }, [fadeAnim]);\r\n\r\n\r\n\r\n  return (\r\n    <Animated.View // Special animatable View\r\n      style={{\r\n        ...props.style,\r\n        opacity: fadeAnim, // Bind opacity to animated value\r\n      }}>\r\n      {props.children}\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\n// You can then use your `FadeInView` in place of a `View` in your components:\r\nexport default () => {\r\n  const [fontsloaded] = useFonts({\r\n    \"PermanentMarker\": require('../../../assets/fonts/PermanentMarker-Regular.ttf'),\r\n\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function prepare() {\r\n      await SplashScreen.preventAutoHideAsync();\r\n    }\r\n    prepare();\r\n  }, [])\r\n\r\n  if (!fontsloaded) {\r\n\r\n    return undefined;\r\n  } else {\r\n    SplashScreen.hideAsync();\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n      }}>\r\n      <FadeInView\r\n        style={{\r\n          justifyContent:'center',\r\n          width: 380,\r\n          height: 225,\r\n          backgroundColor: 'transparent',\r\n        }}>\r\n        <Text style={{ fontFamily:'PermanentMarker', fontSize: 21, color: \"white\",}}>\r\n          Une envie de se retaper en friandise, grosse soir√®e entre potes ou bien le syndrome de Flemme,\r\n          Tranquille...\r\n          La Fons'Dal est la pour toi :-D!\r\n        </Text>\r\n      </FadeInView>\r\n    </View>\r\n  );\r\n\r\n};\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEjD,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAGnD,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAGC,KAAK,EAAI;EAC1B,IAAMC,QAAQ,GAAGX,MAAM,CAAC,IAAIE,QAAQ,CAACU,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAEtDZ,SAAS,CAAC,YAAM;IACdC,QAAQ,CAACY,MAAM,CAACH,QAAQ,EAAE;MACxBI,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,IAAI;MACdC,eAAe,EAAE;IACnB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EACZ,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAId,OACEH,IAAA,CAACN,QAAQ,CAACE,IAAI;IACZe,KAAK,EAAAC,aAAA,CAAAA,aAAA,KACAV,KAAK,CAACS,KAAK;MACdE,OAAO,EAAEV;IAAQ,EACjB;IAAAW,QAAA,EACDZ,KAAK,CAACY;EAAQ,CACF,CAAC;AAEpB,CAAC;AAGD,gBAAe,YAAM;EACnB,IAAAC,SAAA,GAAsBlB,QAAQ,CAAC;MAC7B,iBAAiB,EAAEmB,OAAO,oDAAoD;IAEhF,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAHKI,WAAW,GAAAF,UAAA;EAKlBxB,SAAS,CAAC,YAAM;IAAA,SACC2B,OAAOA,CAAA;MAAA,OAAAC,QAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAAA,SAAAF,SAAA;MAAAA,QAAA,GAAAG,iBAAA,CAAtB,aAAyB;QACvB,MAAM1B,YAAY,CAAC2B,oBAAoB,CAAC,CAAC;MAC3C,CAAC;MAAA,OAAAJ,QAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IACDH,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACD,WAAW,EAAE;IAEhB,OAAOO,SAAS;EAClB,CAAC,MAAM;IACL5B,YAAY,CAAC6B,SAAS,CAAC,CAAC;EAE1B;EAGA,OACE3B,IAAA,CAACJ,IAAI;IACHe,KAAK,EAAE;MACLiB,IAAI,EAAE,CAAC;MACPC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE;IAClB,CAAE;IAAAhB,QAAA,EACFd,IAAA,CAACC,UAAU;MACTU,KAAK,EAAE;QACLmB,cAAc,EAAC,QAAQ;QACvBC,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE,GAAG;QACXC,eAAe,EAAE;MACnB,CAAE;MAAAnB,QAAA,EACFd,IAAA,CAACL,IAAI;QAACgB,KAAK,EAAE;UAAEuB,UAAU,EAAC,iBAAiB;UAAEC,QAAQ,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAtB,QAAA,EAAC;MAI7E,CAAM;IAAC,CACG;EAAC,CACT,CAAC;AAGX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}